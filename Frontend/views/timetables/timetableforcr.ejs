<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="/css/styles.css">
    <title>Time Table</title>
    <script src="/functions.js"></script>
</head>

<body class="timetable-body" onLoad="onLoad()">
    <%- include('../partials/navbar') -%>
    <div class="wrapper">
        <h1>TimeTable(CR And Faculty view only) Sem : <%= sem %> Branch : <%= branchCode %> </h1>
        <div id="main">
            <table class="reqList">
                <thead>
                    <tr>
                        <th class="reqListHead">Days</th>
                        <th class="reqListHead">8:00 AM - 9:00 AM </th>
                        <th class="reqListHead">9:00 AM - 10:00 AM </th>
                        <th class="reqListHead">10:00 AM - 11:00 AM</th>
                        <th class="reqListHead">11:00 AM - 12:00 PM</th>
                        <th class="reqListHead">12:00 PM - 1:00 PM </th>
                        <th class="reqListHead">1:00 PM - 2:00 PM </th>
                        <th class="reqListHead">2:00 PM - 3:00 PM </th>
                        <th class="reqListHead">3:00 PM - 4:00 PM </th>
                        <th class="reqListHead">4:00 PM - 5:00 PM </th>
                    </tr>
                </thead>
                <tbody id="table_body">
                    <% for(let i=1;i<=6;i++) {%>
                    <tr>
                        <% for(let j=0;j<10;j++){ %>
                        <% let c="tooltip " ; %>
                        <% if(j===0){ %>
                        <td class='<%=c%>'>
                            <%= dm[i]%>
                        </td>
                        <%continue }%>
                        <% if(timeTable[i][tm[j]].bit===1){c+="Schedule" ;}%>
                        <% if(timeTable[i][tm[j]].bit===2){c+="LectureCancel" ;}%>
                        <% if(timeTable[i][tm[j]].bit===3){c+="LectureRescheduled" ;}%>
                        <% if(timeTable[i][tm[j]].bit===4){c+="Holiday" ;}%>
                        <td class='<%=c%>' id="<%=i%>+<%=j%>" onclick="updtbl('<%=i%>','<%=j%>')">
                            <% if(timeTable[i][tm[j]].bit===3){ %>
                            <%= timeTable[i][tm[j]].rSubjectCode %>
                            <% }else{ %>
                            <%= timeTable[i][tm[j]].subjectCode %>
                            <% } %>
                        </td>
                        <% } %>
                    </tr>
                    <% } %>
                </tbody>
            </table>

            <div class="sub-color-tables">

                <!-- Subject Table  -->
                <table class="reqList">
                    <thead>
                        <tr>
                            <th class="reqListHead">Subject Code</th>
                            <th class="reqListHead">Subject Name </th>
                            <th class="reqListHead">Faculty Code</th>
                            <th class="reqListHead">Faculty Name</th>
                        </tr>
                    </thead>
                    <tbody id="subject-table_body"></tbody>
                </table>
                <table class="reqList">
                    <thead>
                        <tr>
                            <td class="Holiday c1"></td>
                            <td class="">Mark As Holiday</td>
                        </tr>
                        <tr>
                            <td class="Schedule c1"></td>
                            <td class="">Mark as Scheduled</td>
                        </tr>
                        <tr>
                            <td class="LectureCancel c1"></td>
                            <td class="">Mark As Cancel</td>
                        </tr>

                    </thead>
                </table>
            </div>


        </div>
        <div class="popup" id="popup">
            <div class="popup-header">
                <div class="title">header</div>
                <button class="close-button" onclick="closeUpdater()">&times;</button>
            </div>
            <div class="popup-body">
                <form>
                    <h1>Select Subject for Rescheduled</h1>
                    <label for="subjectCode">Subject Code:</label>
                    <select id="selectSubject" name="subjectCode">
                        <option>Choose Subject</option>
                    </select>
                    <button type="button" name="submitButton" value="change" onclick='handleChangeSubmit()'>
                        Submit</button>
                    <br></br>
                    <button class="LectureCancel" type="button" name="cancelButton" onclick='handleCancel()'> Cancel
                        Lecture</button>
                    <button class="LectureDone" type="button" name="doneButton" onclick='handleDone()'> Mark As
                        Completed</button>
                    <button class="" type="button" name="" onclick='handleHoliday()'> Mark As Holiday</button>
                    <button type="button" name="doneButton" onclick='handleReset()'>Reset</button>

                </form>
            </div>
        </div>
        <div id="overlay" onclick="closeUpdater()"></div>
    </div>

    <script>
        const sem = '<%-sem%>'
        const branchCode = '<%-branchCode%>'
        const tm = [<%-tm%>]

        const subjectCode = document.getElementById('selectSubject')

        //functions
        const handleCancel = async () => {
            closeUpdater()
            console.log(tm[selectedTime]);
            const data = {
                sem,
                branchCode,
                day: selectedDay,
                time: tm[selectedTime]
            }
            fetch("http://localhost:3000/api/liveweek/cancel", {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                    'auth-token': localStorage.getItem('token')
                },
                body: JSON.stringify(data)
            }).then(() => {
                location.reload()
            })
        }
        const handleDone = async () => {
            closeUpdater()
            console.log(tm[selectedTime]);
            const data = {
                sem,
                branchCode,
                day: selectedDay,
                time: tm[selectedTime],
            }
            fetch("http://localhost:3000/api/liveweek/done", {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                    'auth-token': localStorage.getItem('token')
                },
                body: JSON.stringify(data)
            }).then(() => {
                location.reload()
            })
        }
        const handleChangeSubmit = () => {
            closeUpdater()
            console.log(tm[selectedTime]);
            const data = {
                sem,
                branchCode,
                day: selectedDay,
                time: tm[selectedTime],
                subjectCode: subjectCode.value
            }
            fetch("http://localhost:3000/api/liveweek/reschedule", {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                    'auth-token': localStorage.getItem('token')
                },
                body: JSON.stringify(data)
            }).then(() => {
                location.reload()
            })
        }

        const handleReset = () => {
            closeUpdater()
            console.log(tm[selectedTime]);
            const data = {
                sem,
                branchCode,
                day: selectedDay,
                time: tm[selectedTime],
            }
            fetch("http://localhost:3000/api/liveweek/reset", {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                    'auth-token': localStorage.getItem('token')
                },
                body: JSON.stringify(data)
            }).then(() => {
                location.reload()
            })
        }

        const handleHoliday = () => {
            closeUpdater()
            const data = {
                sem,
                branchCode,
                day: selectedDay,
                time: tm[selectedTime],
            }
            fetch("http://localhost:3000/api/liveweek/holiday", {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                    'auth-token': localStorage.getItem('token')
                },
                body: JSON.stringify(data)
            }).then(() => {
                location.reload()
            })
        }
    </script>

</body>

</html>